std:import {fs, match, script, seq, Iter, Path} = std:

c++ = ergo ..
project-root = script:dir:
build = fn :toolchain :p -> {
    # Load requested output
    output = ergo <| Path:join :project-root :p
    c++:get-output {project-root, toolchain} :output
}
dist = fn :result -> seq ^[
    out = Path:join :project-root dist
    fs:create-dir :out
    fs:copy result:file :out
    Iter:map (fn :f -> fs:copy :f :out) result:runtime
    ()
]

debug-toolchain = c++:toolchain {
    compile-flags = [-Og, -g]
    link-flags = [-Og]
}

release-toolchain = c++:toolchain {
    compile-flags = [-O2]
    link-flags = [-O2, -s]
}

debug = fn :p -> dist <| build :debug-toolchain :p
release = fn :p -> dist <| build :release-toolchain :p
run = fn :p -> (build :debug-toolchain :p):exec:

command = match:value ^[
    fn debug :p -> debug :p
    fn release :p -> release :p
    fn run :p -> run :p
]

{command, c++}
